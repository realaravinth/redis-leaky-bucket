var searchIndex = JSON.parse('{\
"lbucket":{"doc":"","t":[17,17,3,17,17,3,17,3,17,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BUCKET_EXPIRY_OFFSET","HIT_PER_SECOND","ID","PKG_NAME","PKG_VERSION","PREFIX_BUCKET","PREFIX_BUCKET_TIMER","PREFIX_COUNTER","REDIS_LBUCKET_BUCKET_TYPE_VERSION","RedisModule_OnLoad","RedisModule_OnUnload","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","from","from","from","into","into","into","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["lbucket","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["If buckets perform clean up at x instant, then buckets â€¦","Initial allocation ammount of bucketsbucket::Bucket","node unique identifier, useful when running in cluster mode","","","bucket key prefix","bucket timer key prefix","counter/captcha key prefix","Bucketbucket::Bucket type version","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3],"f":[null,null,null,null,null,null,null,null,null,[[["c_int",6]],["c_int",6]],[[],["c_int",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["string",3]],[[],["string",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]]],"p":[[3,"ID"],[3,"PREFIX_COUNTER"],[3,"PREFIX_BUCKET"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};